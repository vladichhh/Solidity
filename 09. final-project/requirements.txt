Marketplace Contract

Mandatory Tasks
 (20%) (lecture 6) Public method to buy a store item by specifying its ID (a string) and quantity. The method
should execute successfully if the marketplace has enough of the item in stock and the sent funds are
sufficient. Overpay is considered a tip.
 (10%) (lecture 6) Public method to update the stock of an item by taking its ID and the new availability
(items in stock). This method should only be called from the contract owner!
 (10%) (lecture 6) Public method to add a new product to the Marketplace by specifying its name (string),
price and initial quantity. Only called by the contract owner.
 (10%) (lecture 6) Public method to get the price, name and stock about a product by its ID.
 (10%) (lecture 6) Public method to that returns an array of all product IDs.
 (40%) (lecture 10) Unit tests for all the methods in your contract (including all aforementioned). The tests
should handle all constraints around the contract. The test is passed if the operation fails (expected behavior).

Optional Tasks
 (5%) (lecture 5) Use contract events to signify that an activity has taken place in your contract. Events can
be for item purchase / stock update (Marketplace), for example.
 (20%) (lecture 8) Create a basic website with MetaMask that connects to a contract (published in a test net
or local blockchain). The application should allow at least one operation with the contract (store purchase for example).
 (5%) (lecture 6) Dynamic pricing. For Marketplace, price can increase as the stock of an item lowers.
 (5%) (lecture 6) Public method to withdraw the funds from the contract. This should be called only from the
contract owner (the address which initially created the contract).
